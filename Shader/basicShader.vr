#version 330 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoord;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform vec3 lightPos;

out vec2 TexCoord;
out vec3 outColor;

out vec3 cameraDirection;
out vec3 lightVector;
out vec3 normal;

vec4 worldPosition;

void main()
{
    worldPosition = model * vec4(aPos, 1.0);
    gl_Position = projection * view * worldPosition;
    normal = mat3(transpose(inverse(model))) * aNormal;
    cameraDirection = vec3(inverse(view) * vec4(0, 0, 0, 1)) - vec3(worldPosition);
    lightVector = lightPos - vec3(worldPosition);

    TexCoord = aTexCoord;
}
