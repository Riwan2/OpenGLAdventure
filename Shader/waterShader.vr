#version 330 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;

out vec3 outColor; //flat for low poly aspect

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

uniform float time;

//Wave and basic
float speed = 1.5;
float height = 0.02;
out vec3 Normal;
out vec3 FragPos;
out vec3 basePosition;
out vec3 cameraDirection;
vec4 worldPosition;

//FUNCTION
void CreateWave()
{
    basePosition = aPos;
    basePosition.y += cos(aPos.x + time * speed * 1.2) * 0.05;
    basePosition.y += cos(aPos.z + time * speed * 2) * 0.05;
    basePosition.y += cos((-aPos.x + aPos.z / 2) + time * speed * 3) * 0.15;
    basePosition.y += cos((-aPos.x / 2 + aPos.z) + time * speed * 2) * 0.15;
}

//MAIN
void main()
{
    CreateWave();
    worldPosition = model * vec4(basePosition, 1.0);
   
    gl_Position = projection * view * worldPosition;
    FragPos = vec3(model * vec4(aPos, 1.0));
    Normal = mat3(transpose(inverse(model))) * aNormal;
    cameraDirection = vec3(inverse(view) * vec4(0, 0, 0, 1)) - vec3(worldPosition);
}
