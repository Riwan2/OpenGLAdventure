#version 330 core

out vec4 outColor;

uniform sampler2D myTexture;
uniform float time;

in vec3 basePosition;
in vec2 TexCoord;

vec3 color;
const int numberOfLevel = 20;
vec3 waterColor = vec3(0.2, 0.4, 1.0);
const int ralentisseur = 200;
const float size = 0.03;
const float size1 = 0.032;
const float size2 = 0.037;
const vec2 speed = vec2(-0.4, -0.4);
const vec2 speed1 = vec2(0.4, 0.4);
const vec2 speed2 = vec2(0.2, -0.7);
const float minValue = 0.47;
const float maxValue = 0.55;

void main()
{   
    //Scroll texture
    vec4 textureColor = texture(myTexture, vec2(TexCoord.x + (time * speed.x) / ralentisseur,
     TexCoord.y + (time * speed.y) / ralentisseur) / size);
    vec4 textureColor2 = texture(myTexture, vec2(TexCoord.x + (time * speed1.x) / ralentisseur, 
        TexCoord.y + (time * speed1.y) / ralentisseur) / size1);
    vec4 textureColor3 = texture(myTexture, vec2(TexCoord.x + (time * speed2.x) / ralentisseur, 
        TexCoord.y + (time * speed2.y) / ralentisseur) / size2);
    textureColor3 = 1 - textureColor3;

    //Mix texture
    outColor = mix(textureColor, textureColor2, 0.5);
    outColor = mix(outColor, textureColor3, 0.3);
    outColor.a = 0.55;

    //Filtering brigtness
    float power = outColor.g;
    if (power > minValue && power < maxValue)
        outColor.a = 0.3;

    outColor = mix(outColor, vec4(0.1, 0.7, 1.0, 0.5), 0.3);
}
